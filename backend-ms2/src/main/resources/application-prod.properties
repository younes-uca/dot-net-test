server.port=${COLLABORATOR_SERVICE_BACK_PORT:8036}

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=${COLLABORATOR_SERVICE_DB_URL:jdbc:postgresql://${DB_SERVER:localhost:5432}/zyn?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC}
spring.main.allow-bean-definition-overriding=true
spring.application.name=collaborator


spring.datasource.username=${COLLABORATOR_SERVICE_DB_USER:${DB_USER_NAME:postgres}}
spring.datasource.password=${COLLABORATOR_SERVICE_DB_PASSWORD:${DB_USER_PASSWORD:postgres}}


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy


#minio config
minio.endpoint=http://localhost:9000
minio.accessKey=Vh4IZZ6xwTg781Upj1qp
minio.secretKey=nScFlyHHJGdnosTi5FOsFOyDsVBGJp7TmxNmFp5B
minio.default.bucket=ged
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=250000MB
# Max Request Size
spring.servlet.multipart.max-request-size=100000MB


